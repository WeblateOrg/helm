apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weblate.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "weblate.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "weblate.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/secret-env: {{ .Values.extraSecretConfig | toYaml | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "weblate.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "weblate.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext:
            {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # TODO: Throw error when psql is disabled and no extenral config is specified, same for redis
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_DATABASE
              value: {{ coalesce .Values.postgresql.auth.database "postgres" | quote }}
            - name: POSTGRES_HOST
              value: {{ include "weblate.postgresql.fullname" . | quote}}
            - name: POSTGRES_PORT
              value: {{ coalesce .Values.postgresql.primary.service.ports.postgresql "5432" | quote }}
            - name: POSTGRES_USER
              value: {{ coalesce .Values.postgresql.auth.username "postgres" }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}-postgresql
                  key: {{ empty .Values.postgresql.auth.password | ternary "postgres-" "" }}password
            {{- else }}
            - name: POSTGRES_DATABASE
              value: {{ .Values.weblate.externalPostgres.database | quote }}
            - name: POSTGRES_HOST
              value: {{ .Values.weblate.externalPostgres.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.weblate.externalPostgres.port | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.weblate.externalPostgres.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}-postgresql
                  key: postgres-password
            {{- end }}
            
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: "{{ include "weblate.redis.fullname" . }}"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}-redis
                  key: redis-password
            {{- else if not empty .Values.weblate.externalRedis }}
            - name: REDIS_HOST
              value: {{ .Values.weblate.externalRedis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.weblate.externalRedis.port | quote }}
            - name: REDIS_DB
              value: {{ .Values.weblate.externalRedis.database | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}-redis
                  key: redis-password
            {{- end }}
            
            - name: WEBLATE_ADMIN_EMAIL
              value: "{{ .Values.weblate.defaultUser.email }}"
            - name: WEBLATE_ADMIN_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}
                  key: admin-user
            - name: WEBLATE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}
                  key: admin-password

            - name: WEBLATE_SITE_TITLE
              value: "{{ .Values.weblate.siteTitle }}"
            - name: WEBLATE_SITE_DOMAIN
              value: "{{ .Values.weblate.siteDomain }}"
              
            - name: WEBLATE_EMAIL_HOST
              value: "{{ .Values.weblate.email.host }}"
            - name: WEBLATE_EMAIL_PORT
              value: "{{ .Values.weblate.email.port }}"
            {{- if and .Values.weblate.email.tls .Values.weblate.email.ssl }}
            {{ fail "You cannot enable weblate.email.tls and weblate.email.ssl at the same time! See: https://github.com/WeblateOrg/helm/issues/143" }}
            {{- end }}
            - name: WEBLATE_EMAIL_USE_TLS
              value: "{{ .Values.weblate.email.tls }}"
            - name: WEBLATE_EMAIL_USE_SSL
              value: "{{ .Values.weblate.email.ssl }}"
            - name: WEBLATE_EMAIL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}
                  key: email-user
            - name: WEBLATE_EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "weblate.fullname" . }}
                  key: email-password
            - name: WEBLATE_SERVER_EMAIL
              value: "{{ .Values.serverEmail }}"
            - name: WEBLATE_DEFAULT_FROM_EMAIL
              value: "{{ .Values.defaultFromEmail }}"

            - name: WEBLATE_ALLOWED_HOSTS
              value: "{{ .Values.weblate.allowedHosts }}"
            - name: WEBLATE_DEBUG
              value: "{{ .Values.weblate.debug }}"
            {{- if (and .Values.caCertSecretName .Values.caCertSubPath )}}
            - name: REQUESTS_CA_BUNDLE
              value: /{{ .Values.caCertSubPath }}
            {{- end }}
            {{- range $key, $value := .Values.extraConfig }}
            - name: {{ $key | quote }}
              value: |-
                {{- tpl $value $ | nindent 16 }}
            {{- end }}
          {{- if (or .Values.extraSecretConfig .Values.externalSecretName) }}
          envFrom:
            {{- if .Values.extraSecretConfig }}
            - secretRef:
                name: {{ include "weblate.fullname" . }}-env
            {{- end }}
            {{- if .Values.externalSecretName }}
            - secretRef:
                name: {{ .Values.externalSecretName }}
            {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz/
              port: http
            failureThreshold: 10
            initialDelaySeconds: 90
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz/
              port: http
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 30
          volumeMounts:
            - mountPath: {{ .Values.persistence.filestore_dir }}
              name: weblate-data
            - mountPath: "{{ .Values.persistence.filestore_dir }}/settings-override.py"
              name: weblate-config
              subPath: "settings-override.py"
            {{- if (and .Values.caCertSecretName .Values.caCertSubPath )}}
            - mountPath: /{{ .Values.caCertSubPath }}
              name: ca-bundle
              subPath: {{ .Values.caCertSubPath}}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: weblate-config
          configMap:
            name: {{ include "weblate.fullname" . }}
            items:
            - key: "settings-override.py"
              path: "settings-override.py"
        - name: weblate-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default ( include "weblate.fullname" . ) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
      {{- if (and .Values.caCertSecretName .Values.caCertSubPath )}}
        - name: ca-bundle
          secret:
            secretName: {{ .Values.caCertSecretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
